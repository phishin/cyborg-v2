// /stores/logoStore.jsimport { defineStore } from 'pinia';export const useLogoStore = defineStore('logoStorageData', {    state: () => ({        creationStep: 1,        logoBuilder: false,        companyName: '',        createMyLogoIsActive: false,        sloganOrTagline: '',        preferredSymbolsOrStyles: [],        selectedFontStyles: [],        selectedColorStyles: [],        selectedIndustry: null,        selectedLogoStyle: null,        fullBusinessName: '',        businessNameInitials: '',        selectedSuffix: null,        businessCategory: ''    }),    actions: {        setCreationStep(step) {            this.creationStep = step;        },        activateLogoBuilder() {            this.logoBuilder = true;        },        activateCreateMyLogo() {            this.createMyLogoIsActive = true;        },        setCompanyName(name) {            this.companyName = name;        },        setSloganOrTagline(slogan) {            this.sloganOrTagline = slogan;        },        setPreferredSymbolsOrStyles(symbols) {            this.preferredSymbolsOrStyles = symbols;        },        setSelectedFontStyles(fontStyles) {            this.selectedFontStyles = fontStyles;        },        setSelectedColorStyles(colorStyles) {            this.selectedColorStyles = colorStyles;        },        setSelectedIndustry(industry) {            this.selectedIndustry = industry;        },        setSelectedLogoStyle(style) {            this.selectedLogoStyle = style;        },        setFullBusinessName(name) {            this.fullBusinessName = name;        },        setBusinessNameInitials(initials) {            this.businessNameInitials = initials;        },        setSelectedSuffix(suffix) {            this.selectedSuffix = suffix;        },        setBusinessCategory(category) {            this.businessCategory = category;        },        // You can also add an action to update multiple fields at once if needed:        updateFields(fields) {            Object.assign(this, fields);        },    },});